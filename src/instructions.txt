CATALOG.API

This microservice is built using MongoDb

Selected properties on Catalog.API, on debug tab, changed profile to Catalog.API


Pulled mongo image -> docker pull mongo
docker images => show images


docker ps => show running containers

docker ps -a

docker start a14ace....{containerId}

docker run -d -p 27017:27017 --name shopping-mongo mongo
-d => detach mode
-p => port (forwarding from port 27017 which is the image port number exposed by mongo to 27017 on my local machine
shopping-mongo => container name
mongo => image name

docker exec -it shopping-mongo /bin/bash => opens an interactive terminal inside the container
opens a bash command inside the container

in order to run mongo command in the container, we have to run mongo command first(type mongo then hit enter)

'show dbs' => show database

'use CatalogDb' => create a CatalogDb

db.createCollection('Products') => creates a product collection inside catalog db
db.Products.insert // db.Products.insertMany() 
db.Products.insertMany([{ 'Name':'Asus Laptop','Category':'Computers', 'Summary':'Summary', 'Description':'Description', 'ImageFile':'ImageFile', 'Price':54.93 }, { 'Name':'HP Laptop','Category':'Computers', 'Summary':'Summary', 'Description':'Description', 'ImageFile':'ImageFile', 'Price':88.93 } ])
db.Products.find({}).pretty() => returns all objects
db.Products.remove({}) => remove all

show databases
show collections

Connecting CatalogApi to mongo db
Install-Package MongoDB.Driver

TESTING API
STEP 1, Make sure docker desktop is running
right click on the solution and open in terminal
run the shopping-mongo container (docker start container id) => use docker ps/ ps -a to show images

ADDING MONGO DB TO DOCKER FILE
Added catalogdb as an image on docker compose and overide the conncetionstring setting
Volumes are used to create file storage out the host file system

to run docker compose
docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d
docker-compose -f docker-compose.yml -f docker-compose.override.yml down -- stop all containers in docker compose

when debuggin with VS
Right click solution and clean the project -> this removes the running container

CATALOG API Url is exposed on port 8000 -> http://localhost:8000/swagger/index.html


MONGO GUI
In order to visualize the Monga database, we need to pull and run the mongoclient image from docker
docker run -d -p 3000:3000 mongoclient/mongoclient


BASKET.API
docker pull redis -> pulling redis official image
Redis is an open-source, networked, in-memory, key-value data store
Redis -> REmote DIctionary Server


